/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookingsystem;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : ManagerUI.java
//  @ Date : 16/02/2017
//  @ Author : 
//
//
import java.io.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.Connection;
import java.io.Console;

public class ManagerUI {
            //Run the menu interface ---------                  
        ArrayList list = new ArrayList();
        Connection conn;
        sessionRep seshRepo = new sessionRep();
        InstructorRepoImpl InstRepo = new InstructorRepoImpl();
        SkierRepoImpl SkierRepo = new SkierRepoImpl();
        MaintenanceRepoImpl MaintenanceRepo = new MaintenanceRepoImpl();
        BookingRepoImpl CheckInRepo = new BookingRepoImpl();
        public ManagerUI(Connection aConn) {
            conn = aConn;
        }
        
        public void displayMenu() {
            
            String demoOptions[] = {"View a Session info","View Instructor info","Skier membership","Booking Menu","Maintenance Menu","Check-In","Exit the System"};  
            char demoChoice;          
            Menu demoMenu= new Menu("Menu ", demoOptions, "Enter the menu option: ");
            
            boolean exit = true;
            while (exit){
                System.out.println("----------------------------------------------");
                demoChoice = demoMenu.offerMenu();
   
                BufferedReader keyboard;
                switch (demoChoice){
                case 'A': //to add a new dentist
                        
                        list = seshRepo.read(conn);
                        displaySessionMenu(list);
                //-------------------------------------------                
                break;

                case 'B': //to view a dentist details
                        list = InstRepo.read(conn);
                        displayInstructorMenu(list);
                //-------------------------------------------
                break;       
                
                case 'C': //to view a dentist details 
                        list = SkierRepo.read(conn);
                        displaySkierMenu(list);
                //-------------------------------------------
                break;
                case 'D': //to view a dentist details 
                        list = SkierRepo.read(conn);
                        displayBookingMenu(list);
                //-------------------------------------------
                break;
                case 'E': //to view a dentist details 
                        list = MaintenanceRepo.read(conn);
                        displayMaintenanceMenu(list);
                //-------------------------------------------
                break; 
                case 'F': //to view a dentist details
                    try {
                        list = CheckInRepo.read(conn);
                        CheckInController con = new CheckInController();
                        con.setBookingList(list);
                        int BookingID = 0;
                        int UserID = 0;
                        
                        System.out.println("Enter UserID number:"); 
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        String fromKeyboard = keyboard.readLine();
                        UserID = Integer.parseInt(fromKeyboard);
                        System.out.println("Enter BookingID:");
                        fromKeyboard = keyboard.readLine();
                        BookingID =  Integer.parseInt(fromKeyboard);
                        con.viewDetails(UserID,BookingID);
                    }
                    catch (java.io.IOException exception){} 
                //-------------------------------------------
                break;              
                case 'G': //to view all dentist details 
                    System.out.println("You have exited the system."); 
                    exit = false;
                //-------------------------------------------
            }//end while
        }//end 
        }    
        public void displaySessionMenu(ArrayList aList){
            String demoOptions[] = {"Add new session","View a session","View all sessions","Back to main menu"};  
            char demoChoice;          
            Menu demoMenu= new Menu("Menu ", demoOptions, "Enter the menu option: ");
            
            SessionController con = new SessionController(); 
            con.setSessionList(aList);
            //con.setSessionList();
            boolean exit = true;
            while (exit){
                System.out.println("----------------------------------------------");
                demoChoice = demoMenu.offerMenu();
                String sessionType = "";
                String date = "";
                String time = "";
                double price = 0;
                int id = 0;
                String username = "";
                String password = "";
            
                BufferedReader keyboard;
                switch (demoChoice){
                case 'A': //to add a new dentist
                    try {
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        System.out.println("Please enter your username: ");
                        username = keyboard.readLine();
                        System.out.println("Please enter your password: ");
                        password = keyboard.readLine();
                        System.out.println("Enter the sessionType 'Instructor' or 'No Instructor':"); 
                        sessionType = keyboard.readLine();                    
                        System.out.println("Enter the date in format 'DD/MM/YY':"); 
                        date = keyboard.readLine();
                        System.out.println("Enter the time slot e.g. '13:00-15:00':"); 
                        time = keyboard.readLine();
                        System.out.println("Enter a price e.g. '30.00':"); 
                        String fromKeyboard = keyboard.readLine();
                        price = Double.parseDouble(fromKeyboard);
                        System.out.println("Enter a id number:");
                        fromKeyboard = keyboard.readLine();
                        id = Integer.parseInt(fromKeyboard);

                        con.register(id, sessionType, date, time, price, conn);
                    }
                    catch (java.io.IOException exception){} 
                //-------------------------------------------                
                break;

                case 'B': //to view a session details 
                    try {
                        System.out.println("Enter Id number:"); 
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        String fromKeyboard = keyboard.readLine();
                        id = Integer.parseInt(fromKeyboard);
                        
                        con.viewDetails(id);
                    }
                    catch (java.io.IOException exception){} 
                //-------------------------------------------
                break;       

                case 'C': //to view all session details 
                        con.viewAll();
                //-------------------------------------------
                break;      
            
                case 'D': //to exit the system
                

                    System.out.println("You returned to main menu."); 
                    exit = false;

                }
            }//end while
        }
        
        public void displayInstructorMenu(ArrayList aList) {
            String demoOptions[] = {"Add new Instructor","View a Instructor","Back to main menu"};  
            char demoChoice;          
            Menu demoMenu= new Menu("Menu ", demoOptions, "Enter the menu option: ");
            
            AddInstructorController con = new AddInstructorController(); 
            con.setInstructorList(aList);
            boolean exit = true;
            while (exit){
                System.out.println("\n# # # # # # # # # # # # # # #");
                demoChoice = demoMenu.offerMenu();
                String name = "";
                String spec = "";
                int id = 0;


                BufferedReader keyboard;
                switch (demoChoice){
                case 'A':
                    try {
                        System.out.println("Enter the Name:"); 
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        name = keyboard.readLine();                    
                        System.out.println("Enter the Level:"); 
                        spec = keyboard.readLine();
                        System.out.println("Enter a ID number:"); 
                        String fromKeyboard = keyboard.readLine();
                        id = Integer.parseInt(fromKeyboard);

                        con.register(id, name, spec, conn);
                    }
                    catch (java.io.IOException exception){}                
                break;

                case 'B':
                    try {
                        System.out.println("Enter ID number:"); 
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        String fromKeyboard = keyboard.readLine();
                        id = Integer.parseInt(fromKeyboard);

                        con.viewDetails(id);
                     }
                    catch (java.io.IOException exception){} 
                break;               

                case 'C':
                    System.out.println("You returned to main menu."); 
                    exit = false;
                }
            }
          }
        public void displaySkierMenu(ArrayList aList) {
            
            String demoOptions[] = {"View a skier", "View all skiers", "Update a skier", "Delete a skier","Back to main menu"};  
            char demoChoice;          
            Menu demoMenu= new Menu("Menu ", demoOptions, "Enter the menu option: ");
            
            MemberController con = new MemberController(); 
            con.setSkierList(aList);
            boolean exit = true;
            while (exit){
                System.out.println("----------------------------------------------");
                demoChoice = demoMenu.offerMenu();
                String name = "";
                //String spec = "";
                            String memtyp = "";
                int ref = 0;

                BufferedReader keyboard;
                    switch (demoChoice){
                    case 'A': //to view a skier details
                        try {
                            System.out.println("Enter reference number:"); 
                            keyboard = new  BufferedReader(new InputStreamReader(System.in));
                            String fromKeyboard = keyboard.readLine();
                            ref = Integer.parseInt(fromKeyboard);
                            con.viewDetails(ref);
                        }
                        catch (java.io.IOException exception){} 
                        //-------------------------------------------
                    break;

                    case 'B': //to view all skier details 
                        con.viewAll();
                    //-------------------------------------------
                    break;

                    case 'C': //to update a skier details
                        try {
                            System.out.println("Enter reference number:"); 
                            keyboard = new  BufferedReader(new InputStreamReader(System.in));
                            String fromKeyboard = keyboard.readLine();
                            ref = Integer.parseInt(fromKeyboard);
                            System.out.println("Enter a membershipType:");                  
                            memtyp = keyboard.readLine();
                            con.updateDetails(ref, memtyp, conn);
                        }
                        catch (java.io.IOException exception){} 
                    //-------------------------------------------
                    break;

                    case 'D': //to delete a SKIER 
                        try {
                            System.out.println("Enter reference number:"); 
                            keyboard = new  BufferedReader(new InputStreamReader(System.in));
                            String fromKeyboard = keyboard.readLine();
                            ref = Integer.parseInt(fromKeyboard);
                            con.deleteDetails(ref, conn);
                        }
                        catch (java.io.IOException exception){} 
                        //-------------------------------------------
                    break;     

                    case 'E': //to exist the system
                    System.out.println("You returned to main menu."); 
                        exit = false;
                    }
                }//end while
        }//end 
        
        public void displayBookingMenu(ArrayList aList) {
            String demoOptions[] = {"Create a Skier" ,"Book A Session: New Skier", "Exit the System"};  
            char demoChoice;          
            Menu demoMenu= new Menu("Menu ", demoOptions, "Enter the menu option: ");
            
            MemberController con = new MemberController(); 
            SessionController sessCon = new SessionController();
            sessCon.updateSessionList(conn);
            con.setSkierList(aList);
            boolean exit = true;
            while (exit){
                System.out.println("----------------------------------------------");
                demoChoice = demoMenu.offerMenu();

                BufferedReader keyboard;
                switch (demoChoice){
                case 'A': //to add a new Skier - Without booking
                    try {
                        System.out.println("Enter the Skier's Name:"); 
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        String name = keyboard.readLine();                    
                        System.out.println("Does the user wish to become a member?: Y/N"); 
                        String mem = keyboard.readLine();
                        if (mem.equals("Y")){ //Puts the membership type in a database readable format 
                            mem = "Free";                        
                        }
                        else{
                            mem = "Default";                        
                        }
                        System.out.println("Enter a refence number for the Skier:"); 
                        String fromKeyboard = keyboard.readLine();
                        int ref = Integer.parseInt(fromKeyboard);                 

                        con.register(ref, name, mem, conn);
                    }
                    catch (java.io.IOException exception){} 
                    //-------------------------------------------                
                break;
                
                case 'B': // Create a new skier and then make a booking.
                    try {
                        System.out.println("Enter the Skier's Name:"); 
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        String name = keyboard.readLine();                    
                        System.out.println("Does the user wish to become a member?: Y/N"); 
                        String mem = keyboard.readLine();
                        if (mem.equals("Y")){ //Puts the membership type in a database readable format 
                            mem = "Free";   //The skier must attend 10 sessions in order to viable for paid membership.                 
                        }
                        else{
                            mem = "Default";                        
                        }
                        System.out.println("Enter a refence number for the Skier:"); 
                        String fromKeyboard = keyboard.readLine();
                        int ref = Integer.parseInt(fromKeyboard);
                        
                        System.out.println("Does the Skier want an instructor?: Y/N");
                        String instruct = keyboard.readLine();
                        if (instruct.equals("Y")){
                            instruct = "Instructor";
                            sessCon.viewAllTraining();
                        }
                        else{
                            instruct = "No Instructor"; 
                            sessCon.viewAll();
                        }
                        System.out.println("Please enter the ID of the Session the Skier would like to book OR C to cancel: ");
                        String bookingChoice = keyboard.readLine();
                        if (bookingChoice.equals("C")){
                            con.register(ref, name, mem, conn);
                            throw new IOException("Booking Canceled"); //This line probably will not run.
                        }
                        int sessionID = Integer.parseInt(bookingChoice);
                        Session session = sessCon.findById(sessionID);
                        System.out.println("ID found Successfully");
                        // If the system is unable to find the ID it might crash. Need to figure out a way of catching this.
                        
                        System.out.printf("The price for this session is: £ %f \n" , session.getPrice());
                        System.out.println("-- Payment details segment would go here! --");
                        
                        System.out.println("Booking made Attempting to update database...");
                        
                        

                        con.register(ref, name, mem, session, conn);
                        
                        
                    }
                    catch (java.io.IOException exception){} 
                    //-------------------------------------------                
                break;

                case 'C': //to exist the system


                    System.out.println("You have exited the system."); 
                    exit = false;

                }
            }//end while
      }//end
        public void displayMaintenanceMenu(ArrayList aList) {
            String demoOptions[] = {"Add a new Date", "View a Maintenance Date", "View all Dates", "Update a Dates", "Back to main menu"};  
            char demoChoice;          
            Menu demoMenu= new Menu("Menu ", demoOptions, "Enter the menu option: ");
            
            MaintenanceController con = new MaintenanceController(); 
            con.setDateList(aList);
            boolean exit = true;
            while (exit){
                System.out.println("----------------------------------------------");
                demoChoice = demoMenu.offerMenu();
                String date = "";
                String typ = "";
                int ref = 0;

                BufferedReader keyboard;
                switch (demoChoice){
                case 'A': //to add a new datist
                    try {
                        System.out.println("Enter the date:"); 
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        date = keyboard.readLine();                    
                        System.out.println("Enter the spciality:"); 
                        typ = keyboard.readLine();
                        System.out.println("Enter a refence number:"); 
                        String fromKeyboard = keyboard.readLine();
                        ref = Integer.parseInt(fromKeyboard);

                        con.register(ref, date, typ, conn);
                    }
                    catch (java.io.IOException exception){} 
                    //-------------------------------------------                
                break;

                case 'B': //to view a datist details 
                    try {
                        System.out.println("Enter reference number:"); 
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        String fromKeyboard = keyboard.readLine();
                        ref = Integer.parseInt(fromKeyboard);

                        con.viewDetails(ref);
                     }
                    catch (java.io.IOException exception){} 
                    //-------------------------------------------
                break;       

                case 'C': //to view all datist details 
                        con.viewAll();
                    //-------------------------------------------
                break;       

                case 'D': //to update a datist details
                    try {
                        System.out.println("Enter reference number:"); 
                        keyboard = new  BufferedReader(new InputStreamReader(System.in));
                        String fromKeyboard = keyboard.readLine();
                        ref = Integer.parseInt(fromKeyboard);
                        System.out.println("Enter a speciality:"); 
                        typ = keyboard.readLine();

                        con.updateDetails(ref, typ, conn);
                    }
                    catch (java.io.IOException exception){} 
                    //-------------------------------------------
                break; 

    //            
                case 'E': //to exist the system


                    System.out.println("You returned to main menu."); 
                    exit = false;

                }
            }//end while
      }//end 
}
        

